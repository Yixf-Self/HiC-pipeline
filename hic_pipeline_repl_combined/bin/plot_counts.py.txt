#!/usr/bin/env python

import sys
import math
import os
import gzip
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import colors
from scipy.stats.mstats import mquantiles

infilename=sys.argv[1]
chrlens=sys.argv[2]
outfilename=sys.argv[3]
res=int(sys.argv[4])
defaultVal=0

infile=open(chrlens,'r')
allFragsDic={}
lengths=[]
c=0
for line in infile:
	ch,l=line.split()
#	chNo=int(ch[3:])
	chNo=ch[3:]
	if ch not in allFragsDic:
		allFragsDic[ch]={}
	for i in range(int(math.ceil(1.0*int(l)/res))):
		mid=int(res/2)+i*res
		allFragsDic[ch][mid]=c
		c+=1
	#
	lengths.append(c)
infile.close()

#print  allFragsDic
#print lengths
#print c
counts=np.zeros((c, c))
# chr1    35000   chr10   1035000 0.694081811697
# read the interactions file
infile =gzip.open(infilename,'r')
outfile=open(outfilename,'w')
for line in infile:
	words=line.rstrip().split()
	ch1=words[0]; mid1=int(words[1])
	ch2=words[2]; mid2=int(words[3])
	val=float(words[4]) #contact count
	i=allFragsDic[ch1][mid1]
	j=allFragsDic[ch2][mid2]

#       # only intra-chr counts        
#	if ch1!=ch2: 
#		continue

#       # only inter-chr counts        
#	if ch1==ch2: 
#		continue

	counts[i,j]=val
	counts[j,i]=val

#        outfile.write("1\t"+str(i)+"\t1\t"+str(j)+"\t"+str(abs(mid1-mid2))+"\t"+str(val)+"\t0\t0\n")

infile.close()
outfile.close()
counts =np.transpose(counts)

vmaxLim=mquantiles(counts,[0.98])[0]
print counts.max()
print np.shape(counts)
print vmaxLim
fig, ax = plt.subplots()
m = ax.matshow(counts, origin="bottom", #norm=colors.SymLogNorm(1),
               cmap="afmhot_r", vmax=vmaxLim)

ax.axhline(-0.5, color="#000000", linewidth=1, linestyle="--")
ax.axvline(-0.5, color="#000000", linewidth=1, linestyle="--")

for length in lengths:
    ax.axhline(length - 0.5, color="#000000", linewidth=0.3, linestyle="--")
    ax.axvline(length - 0.5, color="#000000", linewidth=0.3, linestyle="--")

cb = fig.colorbar(m)
cb.set_label("Contact counts")

ax.set_xlim((-0.5, len(counts) - 0.5))
ax.set_ylim((-0.5, len(counts) - 0.5))
#ax.set_title("%s (%s)" % (organism_name, sample))

#fig.savefig(outfilename+".png",dpi=300)
fig.savefig(outfilename+".png", figsize=(10,10), dpi=150)

